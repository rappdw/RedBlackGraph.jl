var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = RedBlackGraph","category":"page"},{"location":"#RedBlackGraph.jl","page":"Home","title":"RedBlackGraph.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for RedBlackGraph. RedBlackGraphs are DAGs of interleaved Binary Trees. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#Introduction","page":"Home","title":"Introduction","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"When representing binary relationships, such as familial relationships, a number of approaches may be utilized  including: ad-hoc, general graphs, specialized tables or charts. As I've explored different representations, a  specialized mathematical representation has emerged. This mathematical representation is useful as the underpinnings  of dynamic graph algorithms for use cases that include graph analysis, relationship calculation, loop detection,  loop prevention, etc.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The underlying mathematical model is a directed, acyclic graph of multiple, interleaved binary trees, designated as a  RedBlackGraph. The name, RedBlackGraph, derives from superficial similarity to Red Black Trees. Red Black Trees are  binary trees such that each node has an extra, color bit (red or black). This color bit is used to balance the tree  as modifications are made. In a RedBlackGraph each vertex also has an extra, color bit, rather than utilizing the  color bit for balancing, the color bit is used to constrain edges between vertices.","category":"page"},{"location":"","page":"Home","title":"Home","text":"I will provide a formal definition of a RedBlackGraph, as well as explore a number of interesting emergent properties.  I will also examine several applications of RedBlackGraphs to illustrate the utility of using this mathematical model  for familial relationships.","category":"page"},{"location":"#Formal-Definition","page":"Home","title":"Formal Definition","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"A RedBlackGraph is a network, mathscrN, consisting of a directed graph, G = (VE), and a relationship  function, r(mathbfumathbfv)rightarrow mathbbA. Where:","category":"page"},{"location":"","page":"Home","title":"Home","text":"mathbbA, avos numbers, are: mathbbN cup 0 colorred1 textwhere begincases colorred1 lt 1  colorred1 text is even  textotherwise  colorred1 text behaves as 1 endcases\nAny given vertex must have a color, either red or black\nAny given vertex can have at most one outbound edge to a vertex of a given color\nEvery vertex has an edge to itself where: r(mathbfvmathbfv)rightarrow begincases colorred1  textif mathbfv text is a red vertex 1  textif mathbfvtext is a black vertex endcases\nIf there is no path in G from mathbfu to mathbfv, r(mathbfumathbfv)rightarrow 0\nFor all other mathbfu, mathbfv not covered by constraints 4 and 5, r(mathbfumathbfv)rightarrow x, were x is generated by walking the shortest path (assume uniform edge weights) from mathbfu to mathbfv as follows:\nx leftarrow 1\nwalk the edge along the shortest path and update x as follows: x leftarrow begincases x ll 0  textif resultant vertex is red  x ll 1  textif resultant vertex is black endcases (ll is bitwise shift left)\nrepeat step two until mathbfv is reached","category":"page"},{"location":"#Motivation","page":"Home","title":"Motivation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The relationships resulting from sexual reproduction can be modeled by a RedBlackGraph, arbitrarily assigning  vertices that are male as Red and vertices that are female as Black with direction of edges being from the offspring  to the parent. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: simple-graph)","category":"page"},{"location":"#Observation","page":"Home","title":"Observation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"For a given vertex in a RedBlackGraph there are two distinct sub-graphs or \"views\" or perspectives, for a given vertex: Descendancy and Ancestry. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"Descendancy is the sub-graph for a given vertex that consists of all vertices and edges that can follow a graph traversal and arrive at the given node.","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: simple-graph-descendancy)","category":"page"},{"location":"","page":"Home","title":"Home","text":"Ancestry is the sub-graph for a given vertex that consists of all the vertices and edges reachable by following out-bound edges. This sub-graph is a well-formed binary tree. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: simple-graph-ancestry)","category":"page"},{"location":"","page":"Home","title":"Home","text":"The Ancestry sub-graph from a given mathbfu is a well-formed binary tree. r(mathbfumathbfv) is defined as to number the nodes of the tree as they are encountered in a breadth first search. A concrete example of r(mathbfumathbfv) is observed in a pedigree chart (common in family history research). See fig. Pedigree Chart. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: pedigree)","category":"page"},{"location":"#Adjacency-Matrix","page":"Home","title":"Adjacency Matrix","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"An adjacency matrix is a square matrix used to represent a graph. The elements of the matrix are 1 (or edge weight) if there is an edge between the vertices represented by the column index and the row index. Slightly more formally, for G with a vertex set V, the adjacency matrix is a square V x V matrix, A such that A_ij is 1 if there exists an edge from mathbfi to mathbfj and 0 otherwise.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Given the above example graph and choosing indices for the vertices as follows: 0 - Female Offspring, 1 - Male Offspring, 2 - Male Progenitor, 3 - Female Progenitor, the graph would be represented by the following adjacency matrix.","category":"page"},{"location":"","page":"Home","title":"Home","text":"A = beginbmatrix\n0  0  1  1 \n0  0  1  1 \n0  0  0  0 \n0  0  0  0 \nendbmatrix","category":"page"},{"location":"#RedBlackGraph-Adjacency-Matrix","page":"Home","title":"RedBlackGraph Adjacency Matrix","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Let's define the adjacency matrix for a RedBlackGraph only slightly differently. R_ij=r(mathbfi mathbfj) if there is a relationship from mathbfi to mathbfj and 0 otherwise. The following is the RedBlackGraph adjacency matrix for the above example graph.","category":"page"},{"location":"","page":"Home","title":"Home","text":"R = beginbmatrix\n1  0  2  3 \n0  colorred1  2  3 \n0  0  colorred1  0 \n0  0  0  1 \nendbmatrix","category":"page"},{"location":"","page":"Home","title":"Home","text":"Observe the following properties:","category":"page"},{"location":"","page":"Home","title":"Home","text":"trace(R) = V_black - V_red","category":"page"},{"location":"","page":"Home","title":"Home","text":"V = V_black + V_red","category":"page"},{"location":"","page":"Home","title":"Home","text":"V_black = fracV + trace(R)2","category":"page"},{"location":"","page":"Home","title":"Home","text":"V_red = fracV - trace(R)2","category":"page"},{"location":"#Transitive-Closure","page":"Home","title":"Transitive Closure","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Computing the transitive closure of an adjacency matrix, A, results in the reachability a matrix, A^+, that shows all vertices that are reachable from any given vertex. If A_ij == 1 there is a path from mathbfv_i to mathbfv_j.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The transitive closure of a RedBlackGraph adjacency matrix, R, is defined to be the relationship matrix, R^+. In addition to reachability, R^+ is defined in such that if R^+_ij == mathbfn and mathbfn is non-zero, then from mathbfn we can derive both the path length and the explicit traversal path from mathbfi to mathbfj.","category":"page"},{"location":"","page":"Home","title":"Home","text":"As an example consider the following graph, where each node has been labeled with a vertex index:","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: simple-graph-transitive-closure)","category":"page"},{"location":"","page":"Home","title":"Home","text":"By inspection:","category":"page"},{"location":"","page":"Home","title":"Home","text":"R = beginbmatrix\ncolorred1  2  3  0  0 \n0  colorred1  0  2  0 \n0  0  1  0  0 \n0  0  0  colorred1  0 \n2  0  0  0  1 \nendbmatrixtext and R^+ = beginbmatrix\ncolorred1  2  3  4  0 \n0  colorred1  0  2  0 \n0  0  1  0  0 \n0  0  0  colorred1  0 \n2  4  5  8  1 \nendbmatrix","category":"page"},{"location":"","page":"Home","title":"Home","text":"Before examining how to generate R^+ from R, consider the following observations:","category":"page"},{"location":"","page":"Home","title":"Home","text":"r(mathbfumathbfv) is even when mathbfv is red and odd when black. (By convention colorred1 is considered even.)\nThe path length is inherent in r(mathbfumathbfv), and is trivially derived by taking the integral portion of log_2(r(mathbfumathbfv)).\nThe traversal path is also inherent in r(mathbfumathbfv) and can be derived by reversing r's definition and successively right shifting out bits (of a base_2 integer representation) and using that bit to \"walk\" the traversal edge to a red vertex or black vertex.\nThe diameter of R^+ is given by log_2(max(r(mathbfumathbfv))).","category":"page"},{"location":"#RedBlack-Arithmetic","page":"Home","title":"RedBlack Arithmetic","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"As constructing R^+ by inspection is cumbersome for non-trivial cases, let's explore a method to algorithmically derive R^+ from R. ","category":"page"},{"location":"#Transitive-Relationship-Function-or-Avos-Product","page":"Home","title":"Transitive Relationship Function or Avos Product","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The first step requires defining a transitive relationship function. To illustrate,  consider 3 vertices: mathbfu, mathbfv and mathbfw. Further, assume that there is a path from mathbfu to mathbfv and from mathbfv to mathbfw. I'll define the function, f(r(mathbfumathbfv)r(mathbfvmathbfw))rightarrow r(mathbfumathbfw), as the avos product and designate it using , e.g. r(mathbfumathbfw)=r(mathbfumathbfv)  r(mathbfvmathbfw).","category":"page"},{"location":"","page":"Home","title":"Home","text":"If r(mathbfumathbfv)=4 (mathbfv is mathbfu's paternal grandfather) and r(mathbfvmathbfw)=7 (mathbfw is mathbfv's maternal grandmother). Using either the definition of r or transcribing mathbfv's pedigree into the proper place in mathbfu's pedigree chart we see that r(mathbfumathbfw)=19, or 19 = 4  7. To further explore this, consider the following (r(mathbfxmathbfy) represented in base-2 for illustrative purposes):","category":"page"},{"location":"","page":"Home","title":"Home","text":"mathbfv's relationship to mathbfu mathbfw's relationship to mathbfv r(mathbfumathbfv) r(mathbfvmathbfw) r(mathbfumathbfw)\nfather father 10 10 100\nfather mother 10 11 101\nmother father 11 10 110\nmother mother 11 11 111\nfather paternal grandfather 10 100 1000\nmaternal grandmother paternal grandfather 111 100 11100","category":"page"},{"location":"","page":"Home","title":"Home","text":"To complete the definition of the Avos Product, the following conventions are imposed:","category":"page"},{"location":"","page":"Home","title":"Home","text":"colorred1 = colorred1  1\ncolorred1 = 1  colorred1\nFor all other cases, colorred1 is treated as 1","category":"page"},{"location":"#Avos-Sum","page":"Home","title":"Avos Sum","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"It is natural to pair multiplication with addition for linear algebra operations (matrix multiplication, matrix distance product, etc.) a min-avos product pairing conforms to the definition of RedBlackGraphs with a slight modification required for implementation in a typical RAM computer, namely colorred1=2^mathbfw-1, where mathbfw is the word size of the numeric type. Aside from colorred1, the range of r(mathbfumathbfv) is mathbbN. It is therefore, natural to utilize unsigned numeric types to represent avos numbers. Additionally, assume the convention min(0)=infty. The min function needs to be aware of both these conventions. These conventions define avos sum which is designated by dotplus, e.g. colorred1 = colorred1 dotplus 5 and 2 = 37 dotplus 2 and 3 = 0 dotplus 3.","category":"page"},{"location":"","page":"Home","title":"Home","text":"To complete the definition of the Avos Sum, the following conventions are imposed:","category":"page"},{"location":"","page":"Home","title":"Home","text":"colorred1 = colorred1 dotplus 1\ncolorred1 = 1 dotplus colorred1\nFor all other cases, colorred1 is treated as 1","category":"page"},{"location":"#Documentation","page":"Home","title":"Documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Modules = [RedBlackGraph]","category":"page"},{"location":"#RedBlackGraph.AInteger","page":"Home","title":"RedBlackGraph.AInteger","text":"AInteger (or Avos Integer)\n\nIntegers that follow Avos definition for addition and multiplication. AIntegers also have a distinct integer, colorred1, where:\n\n0  colorred1  1\niseven(colorred1) == true\n\n\n\n\n\n","category":"type"},{"location":"#Base.:*-Tuple{AInteger, AInteger}","page":"Home","title":"Base.:*","text":"*(x::Integer, y::Integer)\n\nAvos Product or transitive relationship function.\n\nConsider 3 vertices: u, v and w. Furthermore, assume that there is a path from u to v, represented as x, and from v to w, represented as y.\n\nThe Avos Product provides the path from u to w, represented as z, e.g. z = x ⨰ y\n\n\n\n\n\n","category":"method"},{"location":"#Base.:+-Tuple{AInteger, AInteger}","page":"Home","title":"Base.:+","text":"+(x::Integer, y::Integer)\n\nAvos Sum or min(x, y) where min(0) == ∞.\n\n\n\n\n\n","category":"method"},{"location":"#Base.:<-Tuple{AInteger, AInteger}","page":"Home","title":"Base.:<","text":"<(x::Integer, y::Integer)\n\nfor comparison purpose, 0 compares as ∞ and colorred1 is the least value of any AInteger\n\n\n\n\n\n","category":"method"},{"location":"#RedBlackGraph.red_one-Tuple{AInteger}","page":"Home","title":"RedBlackGraph.red_one","text":"red_one(x)\nred_one(T::type)\n\nReturn a colorred1 for x: a value such that colorred1 + 1 == colorred1.\n\n\n\n\n\n","category":"method"}]
}
